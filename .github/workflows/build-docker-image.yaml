name: Build Docker Image

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      SCCACHE_GHA_ENABLED: "true"
      RUSTC_WRAPPER: "sccache"

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - uses: Swatinem/rust-cache@v2

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.7

      - name: Build
        run: |
          cargo build --all-features --all-targets

      - name: Run tests
        run: |
          cargo test --all-features

  docker-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ghcr.io/genzj/phone-monitor
          # generate Docker tags based on the following events/attributes
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{raw}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # BuildKit doesn't preserve cache mounts in the GitHub Actions cache by default.
      # Add a workaround with buildkit-cache-dance
      # Ref: https://docs.docker.com/build/ci/github-actions/cache/#cache-mounts

      - name: Build Cache for Docker
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            var-cache-apt
            var-lib-apt
            root-cargo-registry
            root-cache-sccache
          key: ${{ runner.os }}-rust-build-cache-${{ hashFiles('**/Cargo.lock') }}

      - name: Inject Docker Build Cache
        uses: reproducible-containers/buildkit-cache-dance@v3.1.2
        with:
          cache-map: |
            {
              "var-cache-apt": "/var/cache/apt",
              "var-lib-apt": "/var/lib/apt",
              "root-cargo-registry": "/root/.cargo/registry",
              "root-cache-sccache": "/root/.cache/sccache"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}

      - name: Login to GHCR
        if:  startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Docker image
        uses: docker/build-push-action@v6
        with:
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          # Arm64 takes very long to build, disable it until needed
          # platforms: linux/amd64,linux/arm64
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
